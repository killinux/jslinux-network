
#user  nobody;
user  haoning;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;

    server {
        listen       80;
        #server_name  localhost;
        server_name  192.168.8.61;

        #charset koi8-r;

        #access_log  logs/host.access.log  main;

        location / {
            #root   html;
            rewrite ^(.*)\.appcache$ $1.php;
            rewrite hda(.*).bin http://$SERVER_NAME/$REQUEST_URI/../disk-expander.php?index=$1;
            rewrite hdb(.*).bin http://$SERVER_NAME/$REQUEST_URI/../disk-expander.php?index=$1&hdb=true;
            rewrite ^offlinemanifest.appcache$  http://$SERVER_NAME/$REQUEST_URI/../offlinemanifest.php;
            rewrite index.html  http://$SERVER_NAME/$REQUEST_URI/../index.php;
            root   /var/www;
            index  index.html index.htm;
        }
#"hda(.*).bin" "http://%{SERVER_NAME}/%{REQUEST_URI}/../disk-expander.php?index=$1
        location /hello {
            echo -n "haha";
        }
        location ~* \.(gif|jpg|jpeg)$ {
            echo -n "haha";
            #rewrite \.(gif|jpg)$ /logo.png;
        } 
#        location ~* \.appcache$ {
#            #echo -n "haha";
#            #echo -n $1;
#            #rewrite ^(.*)\.appcache$ index.php;
#            #rewrite ^(.*)\.appcache$ $1.php redirect;
#            rewrite ^(.*)\.appcache$ $1.php;
#        }
        
        location ~ \.php$ {       
            fastcgi_pass 127.0.0.1:9000;      
            fastcgi_index index.php;      
            set $path_info "/";      
            set $real_script_name $fastcgi_script_name;      
            if ($fastcgi_script_name ~ "^(.+?\.php)(/.+)$") {       
                set $real_script_name $1;      
                set $path_info $2;      
            }       
        }       

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            #root   html;
            root   /var/www;
        }
        fastcgi_param SCRIPT_FILENAME /var/www/$real_script_name;      
        fastcgi_param script_name $real_script_name;      
        fastcgi_param path_info $path_info;      
        include /usr/local/nginx/conf/fastcgi_params;    
        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    }


    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    #server {
    #    listen       443 ssl;
    #    server_name  localhost;

    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;

    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}

}
